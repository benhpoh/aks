name: CI

on:
  push:
    branches: [ main ]  

  workflow_dispatch:

env:
  TERRAFORM_VERSION: "1.0.11"
  TERRAFORM_PLAN_VALIDATOR_RELEASE_VERSION: "v1.0.0"

jobs:
  build:
    runs-on: "ubuntu-latest"
    container: bradmccoydev/terraform-plan-validator:latest
    env:
      ARM_CLIENT_ID: 58445e81-389a-46be-9b20-f98610b37262
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: f7b8d1c4-c52f-4aaf-8c24-860c2b1c9d0c
      ARM_TENANT_ID: 1543c9b8-a1d1-4f26-bffb-1368aaeb582e
    outputs:
      VALIDATION_PASSED: ${{ steps.terraformValidate.outputs.VALIDATION_PASSED }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Terraform Init
      run: |-
        cd src
        terraform init
    
    - name: Terraform Plan
      run: |-
        cd src
        terraform plan -var-file=deployment/demo.tfvars -out $GITHUB_SHA.tfplan

    - name: Terraform Validate
      id: terraformValidate
      run: |-
        pwd
        ls
        cd src
        terraform show -json $GITHUB_SHA.tfplan > $GITHUB_SHA.json
        cp /terraform-plan-validator/app.env ./app.env
        cp /terraform-plan-validator/opa-azure-policy.rego ./opa-azure-policy.rego

        /usr/bin/terraform-plan-validator check -p "$GITHUB_SHA.json" -c "azure"
        # VALIDATION_PASSED=$(tail -1 validation-check.txt)
        echo "validation finished"
        echo "::set-output name=VALIDATION_PASSED::$VALIDATION_PASSED"
        echo "Validation result: $VALIDATION_PASSED"
        rm $GITHUB_SHA.json

    - name: Terraform Auto Apply
      if: steps.terraformValidate.outputs.VALIDATION_PASSED == 'true'
      run: |-
        TF_PLAN="$GITHUB_SHA.tfplan"
        echo $TF_PLAN
        # terraform apply $TF_PLAN 

    - name: Terraform Manual Apply
      if: steps.terraformValidate.outputs.VALIDATION_PASSED == 'false'
      run: |-
        TF_PLAN="$GITHUB_SHA.tfplan"
        echo $TF_PLAN
        # terraform apply $TF_PLAN 
